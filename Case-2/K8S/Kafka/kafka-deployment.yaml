apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: D:\AGIT\Bootcamp\Day13\kafka-docker\kompose-windows-amd64.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: D:\AGIT\Bootcamp\Day13\kafka-docker\kompose-windows-amd64.exe convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/kafkadocker-app-tier: "true"
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          image: docker.io/bitnami/kafka
          name: kafka
          ports:
            - containerPort: 9092
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /bitnami
              name: kafka-claim0
      restartPolicy: Always
      volumes:
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: kafka-claim0
status: {}
